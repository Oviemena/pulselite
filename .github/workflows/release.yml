name: Release Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [
          { os: 'linux', arch: 'amd64' },
          { os: 'linux', arch: 'arm64' },
          { os: 'windows', arch: 'amd64' }
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'
          cache: true
      - name: Get dependencies
        run: go mod tidy
      - name: Build Binaries
        run: |
          GOOS=${{ matrix.target.os }} GOARCH=${{ matrix.target.arch }} go build -ldflags="-s -w" -o pulselite-agent-${{ matrix.target.os }}-${{ matrix.target.arch }}${{ matrix.target.os == 'windows' && '.exe' || '' }} cmd/agent/main.go
          GOOS=${{ matrix.target.os }} GOARCH=${{ matrix.target.arch }} go build -ldflags="-s -w" -o pulselite-aggregator-${{ matrix.target.os }}-${{ matrix.target.arch }}${{ matrix.target.os == 'windows' && '.exe' || '' }} cmd/aggregator/main.go
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: pulselite-binaries-${{ matrix.target.os }}-${{ matrix.target.arch }}
          path: pulselite-*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release Directory
        run: mkdir -p release
      - name: Copy Binaries
        run: |
          find artifacts -type f -name "pulselite-*" -exec cp {} release/ \;
          cd release
          zip -r pulselite-binaries-${{ github.ref_name }}.zip pulselite-*
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/pulselite-binaries-${{ github.ref_name }}.zip
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false